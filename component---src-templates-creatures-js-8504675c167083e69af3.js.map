{"version":3,"file":"component---src-templates-creatures-js-8504675c167083e69af3.js","mappings":"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","sources":["webpack://catskald-legendary-creatures/./node_modules/core-js/internals/regexp-flags.js","webpack://catskald-legendary-creatures/./node_modules/core-js/modules/es.regexp.flags.js","webpack://catskald-legendary-creatures/./src/components/PageList/index.module.scss","webpack://catskald-legendary-creatures/./src/components/CreaturePage/index.js","webpack://catskald-legendary-creatures/./src/components/CreaturePage/index.module.scss","webpack://catskald-legendary-creatures/./src/components/PageList/index.js","webpack://catskald-legendary-creatures/./src/components/TitlePage/index.js","webpack://catskald-legendary-creatures/./src/components/Pagination/index.js","webpack://catskald-legendary-creatures/./src/components/Pagination/index.module.scss","webpack://catskald-legendary-creatures/./src/templates/creatures.js"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","// extracted by mini-css-extract-plugin\nexport var pageList = \"index-module--pageList--371c9\";","import {\r\n  creaturePage__link,\r\n  creaturePage__image,\r\n  creaturePage,\r\n  creaturePage__content,\r\n  creaturePage__title,\r\n  creaturePage__description,\r\n} from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\n\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport { useImages } from \"../../hooks/use-images\";\r\nimport { getImageNameOrDefaultCover } from \"../../utils/image-helpers\";\r\n\r\nconst CreaturePage = (props) => {\r\n  const imagePath = props.image;\r\n\r\n  const imageName = getImageNameOrDefaultCover(imagePath);\r\n  const images = useImages();\r\n  const image = images.find((img) => img.name === imageName);\r\n\r\n  return (\r\n    <LocalizedLink className={creaturePage__link} to={props.slug}>\r\n      <section className={creaturePage}>\r\n        <GatsbyImage\r\n          className={creaturePage__image}\r\n          image={image.image}\r\n          alt={props.title}\r\n        />\r\n        <div className={creaturePage__content}>\r\n          <h3 className={creaturePage__title}>{props.title}</h3>\r\n          <p className={creaturePage__description}>{props.description}</p>\r\n        </div>\r\n      </section>\r\n    </LocalizedLink>\r\n  );\r\n};\r\n\r\nCreaturePage.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CreaturePage;\r\n","// extracted by mini-css-extract-plugin\nexport var creaturePage = \"index-module--creaturePage--98e4b\";\nexport var creaturePage__content = \"index-module--creaturePage__content--bfe26\";\nexport var creaturePage__description = \"index-module--creaturePage__description--6bfd4\";\nexport var creaturePage__image = \"index-module--creaturePage__image--2e06c\";\nexport var creaturePage__link = \"index-module--creaturePage__link--9d8cf\";\nexport var creaturePage__title = \"index-module--creaturePage__title--cdaf7\";","import { pageList } from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CreaturePage from \"../CreaturePage\";\r\nimport { LocaleContext } from \"../Layout\";\r\nimport { getCreaturesPath } from \"../../utils/url-helpers\";\r\n\r\nconst PageList = (props) => {\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  return (\r\n    <section className={pageList}>\r\n      {props.pages.map(\r\n        ({\r\n          node: {\r\n            frontmatter: { date, description, title, image },\r\n            fields: { slug },\r\n          },\r\n        }) => (\r\n          <CreaturePage\r\n            key={slug}\r\n            slug={`${getCreaturesPath(language.code)}/${slug}`}\r\n            date={date}\r\n            title={title}\r\n            description={description}\r\n            image={image}\r\n          />\r\n        ),\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nPageList.propTypes = {\r\n  pages: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PageList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TitlePage = (props) => {\r\n  return <h1>{props.text}</h1>;\r\n};\r\n\r\nTitlePage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TitlePage;\r\n","import { pagination } from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\n\r\nconst Pagination = (props) => {\r\n  const translations = useTranslations();\r\n\r\n  const current = props.currentPage + 1;\r\n  const isFirst = current === 1;\r\n  const isLast = current === props.numPages;\r\n\r\n  return (\r\n    <div className={pagination}>\r\n      <p>\r\n        {!isFirst && (\r\n          <LocalizedLink to={props.prevPage}>\r\n            ← {translations.Prev}\r\n          </LocalizedLink>\r\n        )}\r\n      </p>\r\n      <p>\r\n        {current} {translations.of} {props.numPages}\r\n      </p>\r\n      <p>\r\n        {!isLast && (\r\n          <LocalizedLink to={props.nextPage}>\r\n            {translations.Next} →\r\n          </LocalizedLink>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  numPages: PropTypes.number.isRequired,\r\n  prevPage: PropTypes.string,\r\n  nextPage: PropTypes.string,\r\n};\r\n\r\nexport default Pagination;\r\n","// extracted by mini-css-extract-plugin\nexport var pagination = \"index-module--pagination--ae300\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport TitlePage from \"../components/TitlePage\";\r\nimport PageList from \"../components/PageList\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport SEO from \"../components/seo\";\r\nimport useTranslations from \"../i18n/translations/useTranslations\";\r\nimport { LocaleContext } from \"../components/Layout\";\r\nimport { getCreaturesUrl } from \"../utils/url-helpers\";\r\n\r\nconst Creatures = (props) => {\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  // Logic for Pagination Component\r\n  const { currentPage, numPages } = props.pageContext;\r\n  const prevPage = getCreaturesUrl(currentPage - 1, language.code);\r\n  const nextPage = getCreaturesUrl(currentPage + 1, language.code);\r\n  const pages = props.data.allMarkdownRemark.edges;\r\n  const translations = useTranslations();\r\n\r\n  return (\r\n    <>\r\n      <SEO title={translations.CreaturesPageTitle} />\r\n      <TitlePage text={translations.CreaturesPageTitle} />\r\n      <PageList pages={pages} />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nCreatures.propTypes = {\r\n  pageContext: PropTypes.object.isRequired,\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Creatures;\r\n\r\nexport const query = graphql`\r\n  query Creatures(\r\n    $locale: String!\r\n    $dateFormat: String!\r\n    $skip: Int!\r\n    $limit: Int!\r\n    $origin: String = \"*\"\r\n    $taxonomy: String = \"*\"\r\n    $shapeshifting: String = \"*\"\r\n    $activityTime: String = \"*\"\r\n    $voice: String = \"*\"\r\n    $character: String = \"*\"\r\n    $appearance: String = \"*\"\r\n    $clothes: String = \"*\"\r\n    $paraphernalia: String = \"*\"\r\n    $number: String = \"*\"\r\n    $habitat: String = \"*\"\r\n  ) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: {\r\n          page: { eq: null }\r\n          origin: { elemMatch: { value: { glob: $origin } } }\r\n          taxonomy: { elemMatch: { value: { glob: $taxonomy } } }\r\n          shapeshifting: { elemMatch: { value: { glob: $shapeshifting } } }\r\n          activityTime: { elemMatch: { value: { glob: $activityTime } } }\r\n          voice: { elemMatch: { value: { glob: $voice } } }\r\n          character: { elemMatch: { value: { glob: $character } } }\r\n          appearance: { elemMatch: { value: { glob: $appearance } } }\r\n          clothes: { elemMatch: { value: { glob: $clothes } } }\r\n          paraphernalia: { elemMatch: { value: { glob: $paraphernalia } } }\r\n          number: { elemMatch: { value: { glob: $number } } }\r\n          habitat: { elemMatch: { value: { glob: $habitat } } }\r\n        }\r\n      }\r\n      sort: { frontmatter: { date: DESC } }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            image\r\n            date(formatString: $dateFormat)\r\n          }\r\n          fields {\r\n            locale\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","props","imagePath","image","imageName","getImageNameOrDefaultCover","useImages","find","img","name","React","LocalizedLink","className","to","slug","GatsbyImage","alt","title","description","language","LocaleContext","pages","map","_ref","node","frontmatter","date","fields","CreaturePage","getCreaturesPath","code","text","translations","useTranslations","current","currentPage","isFirst","isLast","numPages","prevPage","Prev","of","nextPage","Next","pageContext","getCreaturesUrl","data","allMarkdownRemark","edges","SEO","CreaturesPageTitle","TitlePage","PageList","Pagination"],"sourceRoot":""}