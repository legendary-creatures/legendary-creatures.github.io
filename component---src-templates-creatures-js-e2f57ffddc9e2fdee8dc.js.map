{"version":3,"file":"component---src-templates-creatures-js-e2f57ffddc9e2fdee8dc.js","mappings":"oPA4CA,EArCmB,SAACA,GAClB,IAAMC,GAAeC,EAAAA,EAAAA,KAEfC,EAAUH,EAAMI,YAAc,EAC9BC,EAAsB,IAAZF,EACVG,EAASH,IAAYH,EAAMO,SAEjC,OACE,uBAAKC,UCde,mCDelB,0BACIH,GACA,gBAACI,EAAA,EAAD,CAAeC,GAAIV,EAAMW,UAAzB,KACKV,EAAaW,OAItB,yBACGT,EADH,IACaF,EAAaY,GAD1B,IAC+Bb,EAAMO,UAErC,0BACID,GACA,gBAACG,EAAA,EAAD,CAAeC,GAAIV,EAAMc,UACtBb,EAAac,KADhB,S,8BEwBV,EAxCkB,SAACf,GACjB,IAAQgB,EAAaC,EAAAA,WAAiBC,EAAAA,GAA9BF,SAGR,EAAkChB,EAAMmB,YAAhCf,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,SACfI,GAAWS,EAAAA,EAAAA,IAAgBhB,EAAc,EAAGY,EAASK,MACrDP,GAAWM,EAAAA,EAAAA,IAAgBhB,EAAc,EAAGY,EAASK,MACrDC,EAAQtB,EAAMuB,KAAKC,kBAAkBC,MACrCxB,GAAeC,EAAAA,EAAAA,KAErB,OACE,gCACE,gBAAC,IAAD,CAAKwB,MAAOzB,EAAa0B,qBACzB,gBAACC,EAAA,EAAD,CAAWC,KAAM5B,EAAa0B,qBAC9B,gBAACG,EAAA,EAAD,CAAUR,MAAOA,IACjB,gBAAC,EAAD,CACElB,YAAaA,EACbG,SAAUA,EACVI,SAAUA,EACVG,SAAUA","sources":["webpack://catskald-legendary-creatures/./src/components/Pagination/index.js","webpack://catskald-legendary-creatures/./src/components/Pagination/index.module.scss","webpack://catskald-legendary-creatures/./src/templates/creatures.js"],"sourcesContent":["import { pagination } from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\n\r\nconst Pagination = (props) => {\r\n  const translations = useTranslations();\r\n\r\n  const current = props.currentPage + 1;\r\n  const isFirst = current === 1;\r\n  const isLast = current === props.numPages;\r\n\r\n  return (\r\n    <div className={pagination}>\r\n      <p>\r\n        {!isFirst && (\r\n          <LocalizedLink to={props.prevPage}>\r\n            ← {translations.Prev}\r\n          </LocalizedLink>\r\n        )}\r\n      </p>\r\n      <p>\r\n        {current} {translations.of} {props.numPages}\r\n      </p>\r\n      <p>\r\n        {!isLast && (\r\n          <LocalizedLink to={props.nextPage}>\r\n            {translations.Next} →\r\n          </LocalizedLink>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  numPages: PropTypes.number.isRequired,\r\n  prevPage: PropTypes.string,\r\n  nextPage: PropTypes.string,\r\n};\r\n\r\nexport default Pagination;\r\n","// extracted by mini-css-extract-plugin\nexport var pagination = \"index-module--pagination--1ik9H\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport TitlePage from \"../components/TitlePage\";\r\nimport PageList from \"../components/PageList\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport SEO from \"../components/seo\";\r\nimport useTranslations from \"../i18n/translations/useTranslations\";\r\nimport { LocaleContext } from \"../components/Layout\";\r\nimport { getCreaturesUrl } from \"../utils/url-helpers\";\r\n\r\nconst Creatures = (props) => {\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  // Logic for Pagination Component\r\n  const { currentPage, numPages } = props.pageContext;\r\n  const prevPage = getCreaturesUrl(currentPage - 1, language.code);\r\n  const nextPage = getCreaturesUrl(currentPage + 1, language.code);\r\n  const pages = props.data.allMarkdownRemark.edges;\r\n  const translations = useTranslations();\r\n\r\n  return (\r\n    <>\r\n      <SEO title={translations.CreaturesPageTitle} />\r\n      <TitlePage text={translations.CreaturesPageTitle} />\r\n      <PageList pages={pages} />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nCreatures.propTypes = {\r\n  pageContext: PropTypes.object.isRequired,\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Creatures;\r\n\r\nexport const query = graphql`\r\n  query Creatures(\r\n    $locale: String!\r\n    $dateFormat: String!\r\n    $skip: Int!\r\n    $limit: Int!\r\n    $origin: String = \"*\"\r\n    $taxonomy: String = \"*\"\r\n    $shapeshifting: String = \"*\"\r\n    $activityTime: String = \"*\"\r\n    $voice: String = \"*\"\r\n    $character: String = \"*\"\r\n    $appearance: String = \"*\"\r\n    $clothes: String = \"*\"\r\n    $paraphernalia: String = \"*\"\r\n    $number: String = \"*\"\r\n    $habitat: String = \"*\"\r\n  ) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: {\r\n          page: { eq: null }\r\n          origin: { elemMatch: { value: { glob: $origin } } }\r\n          taxonomy: { elemMatch: { value: { glob: $taxonomy } } }\r\n          shapeshifting: { elemMatch: { value: { glob: $shapeshifting } } }\r\n          activityTime: { elemMatch: { value: { glob: $activityTime } } }\r\n          voice: { elemMatch: { value: { glob: $voice } } }\r\n          character: { elemMatch: { value: { glob: $character } } }\r\n          appearance: { elemMatch: { value: { glob: $appearance } } }\r\n          clothes: { elemMatch: { value: { glob: $clothes } } }\r\n          paraphernalia: { elemMatch: { value: { glob: $paraphernalia } } }\r\n          number: { elemMatch: { value: { glob: $number } } }\r\n          habitat: { elemMatch: { value: { glob: $habitat } } }\r\n        }\r\n      }\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            image\r\n            date(formatString: $dateFormat)\r\n          }\r\n          fields {\r\n            locale\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["props","translations","useTranslations","current","currentPage","isFirst","isLast","numPages","className","LocalizedLink","to","prevPage","Prev","of","nextPage","Next","language","React","LocaleContext","pageContext","getCreaturesUrl","code","pages","data","allMarkdownRemark","edges","title","CreaturesPageTitle","TitlePage","text","PageList"],"sourceRoot":""}