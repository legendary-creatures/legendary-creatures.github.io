{"version":3,"file":"component---src-pages-index-js-32bfeb54435d47625c30.js","mappings":"2OAwDA,UA5Cc,SAAC,GAAqC,IAA3BA,EAA0B,EAAlCC,KAAQD,kBACjBE,GAAeC,EAAAA,EAAAA,KACbC,EAAaC,EAAAA,WAAiBC,EAAAA,GAA9BF,SAEFG,EAAQP,EAAkBQ,MAEhC,OACE,2BACE,gBAAC,IAAD,CAAKC,MAAOP,EAAaQ,OACzB,gBAAC,IAAD,CAAWC,KAAMT,EAAaU,QAC9B,yBAAIV,EAAaW,aACjB,2BACA,0BACE,8BAASX,EAAaY,SAExB,2BACA,gBAAC,IAAD,CAAUP,MAAOA,IACjB,2BACA,4BAAOL,EAAaa,KAApB,KACA,gBAAC,IAAD,CAAeC,IAAIC,EAAAA,EAAAA,IAAiBb,EAASc,OAC1ChB,EAAaiB,KAEhB,gCAAQjB,EAAakB,WAArB,KACA,gBAAC,IAAD,CAAeJ,IAAIK,EAAAA,EAAAA,IAAYjB,EAASc,OACrChB,EAAaoB","sources":["webpack://catskald-legendary-creatures/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport SEO from \"../components/seo\";\r\nimport TitlePage from \"../components/TitlePage\";\r\nimport PageList from \"../components/PageList\";\r\nimport LocalizedLink from \"../components/LocalizedLink\";\r\nimport useTranslations from \"../i18n/translations/useTranslations\";\r\nimport { LocaleContext } from \"../components/Layout\";\r\nimport { getTagsPath, getCreaturesPath } from \"../utils/url-helpers\";\r\n\r\nconst Index = ({ data: { allMarkdownRemark } }) => {\r\n  const translations = useTranslations();\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  const pages = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <div>\r\n      <SEO title={translations.Home} />\r\n      <TitlePage text={translations.Title} />\r\n      <p>{translations.Description}</p>\r\n      <hr />\r\n      <h2>\r\n        <strong>{translations.Latest}</strong>\r\n      </h2>\r\n      <br />\r\n      <PageList pages={pages} />\r\n      <br />\r\n      <span>{translations.View} </span>\r\n      <LocalizedLink to={getCreaturesPath(language.code)}>\r\n        {translations.all}\r\n      </LocalizedLink>\r\n      <span> {translations.orSearchBy} </span>\r\n      <LocalizedLink to={getTagsPath(language.code)}>\r\n        {translations.tags}\r\n      </LocalizedLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const query = graphql`\r\n  query Index($locale: String!, $dateFormat: String!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: { page: { eq: null } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            image\r\n            date(formatString: $dateFormat)\r\n          }\r\n          fields {\r\n            locale\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["allMarkdownRemark","data","translations","useTranslations","language","React","LocaleContext","pages","edges","title","Home","text","Title","Description","Latest","View","to","getCreaturesPath","code","all","orSearchBy","getTagsPath","tags"],"sourceRoot":""}