{"version":3,"file":"component---src-templates-tags-js-7220f555ec93414d68f5.js","mappings":"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","sources":["webpack://catskald-legendary-creatures/./node_modules/path-browserify/index.js","webpack://catskald-legendary-creatures/./node_modules/core-js/internals/regexp-flags.js","webpack://catskald-legendary-creatures/./node_modules/core-js/modules/es.regexp.flags.js","webpack://catskald-legendary-creatures/./src/components/TitlePage/index.js","webpack://catskald-legendary-creatures/./src/components/TagList/index.js","webpack://catskald-legendary-creatures/./src/components/TagList/index.module.scss","webpack://catskald-legendary-creatures/./src/templates/tags.js","webpack://catskald-legendary-creatures/./src/utils/array-helpers.js","webpack://catskald-legendary-creatures/./src/utils/tags-helpers.js","webpack://catskald-legendary-creatures/./src/utils/url-helpers.js","webpack://catskald-legendary-creatures/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://catskald-legendary-creatures/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://catskald-legendary-creatures/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://catskald-legendary-creatures/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://catskald-legendary-creatures/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://catskald-legendary-creatures/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length) code = path.charCodeAt(i);else if (code === 47 /*/*/) break;else code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) res += '/..';else res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i);else res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0) path = arguments[i];else {\n        if (cwd === undefined) cwd = process.cwd();\n        path = cwd;\n      }\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0) return '/' + resolvedPath;else return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n  normalize: function normalize(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n  join: function join() {\n    if (arguments.length === 0) return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined) joined = arg;else joined += '/' + arg;\n      }\n    }\n    if (joined === undefined) return '.';\n    return posix.normalize(joined);\n  },\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to) return '';\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/) break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/) break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode) break;else if (fromCode === 47 /*/*/) lastCommonSep = i;\n    }\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0) out += '..';else out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0) return out + to.slice(toStart + lastCommonSep);else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/) ++toStart;\n      return to.slice(toStart);\n    }\n  },\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n  parse: function parse(path) {\n    assertPath(path);\n    var ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n    return ret;\n  },\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\nposix.posix = posix;\nmodule.exports = posix;","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TitlePage = (props) => {\r\n  return <h1>{props.text}</h1>;\r\n};\r\n\r\nTitlePage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TitlePage;\r\n","import {\r\n  tagList,\r\n  tagList__item,\r\n  tagList__tag,\r\n  tagList__value,\r\n  tagList__values,\r\n} from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport { LocaleContext } from \"../Layout\";\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\nimport { getTagUrl, getTagValueUrl } from \"../../utils/url-helpers\";\r\nimport { localizedSort } from \"../../utils/array-helpers\";\r\n\r\nconst TagList = (props) => {\r\n  const translations = useTranslations();\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  const getSortedTags = (tags) =>\r\n    localizedSort(\r\n      Object.entries(tags).map(([tag, values]) => ({\r\n        tag: translations[tag],\r\n        values: localizedSort(values, language.code),\r\n      })),\r\n      language.code,\r\n      (x) => x.tag,\r\n    );\r\n\r\n  return (\r\n    <section className={tagList}>\r\n      {getSortedTags(props.tags).map(({ tag, values }) => {\r\n        return (\r\n          <div key={tag} id={tag} className={tagList__item}>\r\n            <LocalizedLink\r\n              className={tagList__tag}\r\n              to={getTagUrl(tag, language.code)}\r\n            >\r\n              {tag}\r\n            </LocalizedLink>\r\n            <br />\r\n            <div className={tagList__values}>\r\n              {values.map((value, index) => (\r\n                <LocalizedLink\r\n                  className={tagList__value}\r\n                  key={`${tag}_${value}${index}`}\r\n                  to={getTagValueUrl(tag, value, language.code)}\r\n                >\r\n                  {value}\r\n                </LocalizedLink>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nTagList.propTypes = {\r\n  tags: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TagList;\r\n","// extracted by mini-css-extract-plugin\nexport var tagList = \"index-module--tagList--4710c\";\nexport var tagList__item = \"index-module--tagList__item--bf3ac\";\nexport var tagList__tag = \"index-module--tagList__tag--58975\";\nexport var tagList__value = \"index-module--tagList__value--079a3\";\nexport var tagList__values = \"index-module--tagList__values--be9c8\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport TitlePage from \"../components/TitlePage\";\r\nimport TagList from \"../components/TagList\";\r\nimport SEO from \"../components/seo\";\r\nimport useTranslations from \"../i18n/translations/useTranslations\";\r\nimport { parseTags } from \"../utils/tags-helpers\";\r\n\r\nconst Tags = (props) => {\r\n  const translations = useTranslations();\r\n  const tags = parseTags(props.data.allMarkdownRemark.edges);\r\n\r\n  return (\r\n    <>\r\n      <SEO title={translations.TagsPageTitle} />\r\n      <TitlePage text={translations.TagsPageTitle} />\r\n      <TagList tags={tags} />\r\n    </>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const query = graphql`\r\n  query Tags($locale: String!) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: { page: { eq: null } }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            origin {\r\n              value\r\n            }\r\n            taxonomy {\r\n              value\r\n            }\r\n            shapeshifting {\r\n              value\r\n            }\r\n            activityTime {\r\n              value\r\n            }\r\n            voice {\r\n              value\r\n            }\r\n            appearance {\r\n              value\r\n            }\r\n            character {\r\n              value\r\n            }\r\n            clothes {\r\n              value\r\n            }\r\n            paraphernalia {\r\n              value\r\n            }\r\n            number {\r\n              value\r\n            }\r\n            habitat {\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","exports.localizedSort = (array, languageCode, valueSelector) => {\r\n  if (!valueSelector) valueSelector = (x) => x;\r\n  const temp = [...array];\r\n  temp.sort((a, b) =>\r\n    valueSelector(a).localeCompare(valueSelector(b), languageCode),\r\n  );\r\n  return temp;\r\n};\r\n","const localizedNavigation = require(\"../i18n/navigation\");\r\nconst { noTag } = require(\"../configuration\");\r\n\r\nexports.parseTags = (edges) => {\r\n  let tags = {};\r\n\r\n  edges.forEach(({ node: { frontmatter } }) => {\r\n    for (const tag in frontmatter) {\r\n      if (!localizedNavigation.tags[tag]) continue;\r\n\r\n      let tagValues = frontmatter[tag];\r\n      if (!tagValues) continue;\r\n\r\n      tagValues = Array.isArray(tagValues)\r\n        ? tagValues.map((v) => v.value)\r\n        : [tagValues.value];\r\n      tagValues = tagValues.filter((value) => value !== noTag);\r\n      if (tagValues.length === 0) continue;\r\n\r\n      const existingTags = tags[tag];\r\n      if (existingTags) {\r\n        tags[tag] = [...new Set(existingTags.concat(tagValues))];\r\n      } else {\r\n        tags[tag] = tagValues;\r\n      }\r\n    }\r\n  });\r\n\r\n  return tags;\r\n};\r\n","const localizedNavigation = require(\"../i18n/navigation\");\r\nconst path = require(\"path\");\r\n\r\nconst pagePath = (pageIndex) => (pageIndex >= 1 ? `/${pageIndex}` : \"\");\r\n\r\nconst getTagsPath = (languageCode) =>\r\n  localizedNavigation.pages.tags[languageCode].path;\r\nconst getCreaturesPath = (languageCode) =>\r\n  localizedNavigation.pages.creatures[languageCode].path;\r\nconst getSearchPath = (languageCode) =>\r\n  localizedNavigation.pages.search[languageCode].path;\r\n\r\nconst removeSpecialCharacters = (s) => s.replace(/\\s/g, \"\");\r\n\r\nexports.getTagsPath = getTagsPath;\r\nexports.getCreaturesPath = getCreaturesPath;\r\nexports.getSearchPath = getSearchPath;\r\n\r\nexports.localizedSlug = ({ isDefault, locale, slug, isPage }) => {\r\n  if (isPage) {\r\n    return isDefault ? `/${slug}` : `/${locale}/${slug}`;\r\n  }\r\n\r\n  const creaturesPath = getCreaturesPath(locale);\r\n\r\n  return isDefault\r\n    ? `${creaturesPath}/${slug}`\r\n    : `/${locale + creaturesPath}/${slug}`;\r\n};\r\n\r\nexports.getTagUrl = (tag, languageCode) =>\r\n  `${getTagsPath(languageCode)}#${removeSpecialCharacters(tag)}`;\r\n\r\nexports.getTagValueUrl = (tag, value, languageCode, pageIndex) => {\r\n  if (!tag || !value) return null;\r\n  const url = `${getSearchPath(languageCode)}/${removeSpecialCharacters(\r\n    tag,\r\n  ).toLowerCase()}/${removeSpecialCharacters(value).toLowerCase()}`;\r\n  return url + pagePath(pageIndex);\r\n};\r\n\r\nexports.getCreatureUrl = (creatureName, languageCode) => {\r\n  return `${getCreaturesPath(languageCode)}/${removeSpecialCharacters(\r\n    creatureName,\r\n  )}`;\r\n};\r\n\r\nexports.getCreaturesUrl = (pageIndex, languageCode) => {\r\n  return getCreaturesPath(languageCode) + pagePath(pageIndex);\r\n};\r\n\r\nexports.getNameFromPath = (value) => {\r\n  const nameWithLanguage = path.basename(value, \".md\");\r\n  const name = nameWithLanguage.slice(0, -3); //\".en\".length = 3\r\n  const language = nameWithLanguage.slice(-2); //\"en\".length = 2\r\n\r\n  return {\r\n    name,\r\n    language,\r\n  };\r\n};\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","name","_format","parse","ret","delimiter","win32","module","exports","anObject","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","props","React","text","translations","useTranslations","language","LocaleContext","className","tags","localizedSort","entries","map","_ref","tag","values","x","getSortedTags","_ref2","id","LocalizedLink","getTagUrl","value","index","getTagValueUrl","parseTags","data","allMarkdownRemark","edges","SEO","title","TagsPageTitle","TitlePage","TagList","array","languageCode","valueSelector","temp","_toConsumableArray","sort","a","b","localeCompare","localizedNavigation","require","noTag","forEach","node","frontmatter","tagValues","Array","isArray","v","filter","existingTags","Set","concat","pagePath","pageIndex","getTagsPath","pages","getCreaturesPath","creatures","getSearchPath","search","removeSpecialCharacters","s","replace","toLowerCase","creatureName","nameWithLanguage","arr","len","arr2","__esModule","arrayLikeToArray","iter","Symbol","iterator","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","constructor","test"],"sourceRoot":""}