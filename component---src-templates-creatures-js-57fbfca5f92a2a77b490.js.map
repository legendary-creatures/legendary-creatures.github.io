{"version":3,"sources":["webpack:///./src/components/TitlePage/index.js","webpack:///./src/components/TitlePage/index.module.scss","webpack:///./src/components/PageList/index.module.scss","webpack:///./src/components/CreaturePage/index.js","webpack:///./src/components/PageList/index.js","webpack:///./src/components/Pagination/index.module.scss","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/creatures.js","webpack:///./src/components/CreaturePage/index.module.scss"],"names":["TitlePage","props","className","styles","TitleElement","text","module","exports","getImageNameOrDefaultCover","require","CreaturePage","imagePath","image","imageName","useImages","find","img","originalName","LocalizedLink","CreaturePageLink","to","slug","CreaturePreviewContainer","CreaturePageImage","fluid","alt","title","CreatureInfo","PageTitle","PageDescription","description","PageList","getCreaturesPath","language","React","useContext","LocaleContext","pages","map","node","frontmatter","date","fields","key","code","Pagination","translations","useTranslations","current","currentPage","isFirst","isLast","numPages","PaginationContainer","prevPage","Prev","of","nextPage","Next","query","Creatures","getCreaturesUrl","pageContext","data","allMarkdownRemark","edges","CreaturesPageTitle"],"mappings":"6FAAA,8CAaeA,IARG,SAAAC,GAChB,OAAO,wBAAIC,UAAWC,IAAOC,cAAeH,EAAMI,Q,uBCLpDC,EAAOC,QAAU,CAAC,aAAe,W,qBCAjCD,EAAOC,QAAU,CAAC,SAAW,W,kJCOrBC,EAA+BC,EAAQ,QAAvCD,2BAiCOE,EA/BM,SAAAT,GACnB,IAAMU,EAAYV,EAAMW,MAElBC,EAAYL,EAA2BG,GAEvCC,EADSE,cACMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,eAAiBJ,KAEtD,OACE,kBAACK,EAAA,EAAD,CAAehB,UAAWC,IAAOgB,iBAAkBC,GAAInB,EAAMoB,MAC3D,6BAASnB,UAAWC,IAAOmB,0BACzB,kBAAC,IAAD,CACEpB,UAAWC,IAAOoB,kBAClBC,MAAOZ,EACPa,IAAKxB,EAAMyB,QAEb,yBAAKxB,UAAWC,IAAOwB,cACrB,wBAAIzB,UAAWC,IAAOyB,WAAY3B,EAAMyB,OACxC,uBAAGxB,UAAWC,IAAO0B,iBAAkB5B,EAAM6B,iB,YCWxCC,IA/BE,SAAA9B,GAAU,IACjB+B,EAAqBvB,EAAQ,QAA7BuB,iBACAC,EAAaC,IAAMC,WAAWC,KAA9BH,SAER,OACE,6BAAS/B,UAAWC,IAAO4B,UACxB9B,EAAMoC,MAAMC,KACX,oBACEC,KADF,IAEIC,YAAeC,EAFnB,EAEmBA,KAAMX,EAFzB,EAEyBA,YAAaJ,EAFtC,EAEsCA,MAAOd,EAF7C,EAE6CA,MAC/BS,EAHd,EAGIqB,OAAUrB,KAHd,OAME,kBAAC,EAAD,CACEsB,IAAKtB,EACLA,KAASW,EAAiBC,EAASW,MAA/B,IAAwCvB,EAC5CoB,KAAMA,EACNf,MAAOA,EACPI,YAAaA,EACblB,MAAOA,U,qBCzBnBN,EAAOC,QAAU,CAAC,oBAAsB,W,6KC2CzBsC,EArCI,SAAA5C,GACjB,IAAM6C,EAAeC,cAEfC,EAAU/C,EAAMgD,YAAc,EAC9BC,EAAsB,IAAZF,EACVG,EAASH,IAAY/C,EAAMmD,SAEjC,OACE,yBAAKlD,UAAWC,IAAOkD,qBACrB,4BACIH,GACA,kBAAChC,EAAA,EAAD,CAAeE,GAAInB,EAAMqD,UAAzB,KACKR,EAAaS,OAItB,2BACGP,EADH,IACaF,EAAaU,GAD1B,IAC+BvD,EAAMmD,UAErC,4BACID,GACA,kBAACjC,EAAA,EAAD,CAAeE,GAAInB,EAAMwD,UACtBX,EAAaY,KADhB,S,wBCyBGC,GAFEC,UAzCG,SAAA3D,GAAU,IAClB4D,EAAoBpD,EAAQ,QAA5BoD,gBACA5B,EAAaC,IAAMC,WAAWC,KAA9BH,SAFiB,EAKShC,EAAM6D,YAAhCb,EALiB,EAKjBA,YAAaG,EALI,EAKJA,SACfE,EAAWO,EAAgBZ,EAAc,EAAGhB,EAASW,MACrDa,EAAWI,EAAgBZ,EAAc,EAAGhB,EAASW,MACrDP,EAAQpC,EAAM8D,KAAKC,kBAAkBC,MACrCnB,EAAeC,cAErB,OACE,oCACE,kBAAC,IAAD,CAAKrB,MAAOoB,EAAaoB,qBACzB,kBAAClE,EAAA,EAAD,CAAWK,KAAMyC,EAAaoB,qBAC9B,kBAACnC,EAAA,EAAD,CAAUM,MAAOA,IACjB,kBAAC,EAAD,CACEY,YAAaA,EACbG,SAAUA,EACVE,SAAUA,EACVG,SAAUA,MAuBA,e,qBCpDlBnD,EAAOC,QAAU,CAAC,iBAAmB,SAAS,yBAA2B,QAAQ,kBAAoB,SAAS,aAAe,SAAS,UAAY,SAAS,gBAAkB","file":"component---src-templates-creatures-js-57fbfca5f92a2a77b490.js","sourcesContent":["import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TitlePage = props => {\r\n  return <h1 className={styles.TitleElement}>{props.text}</h1>;\r\n};\r\n\r\nTitlePage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TitlePage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleElement\":\"_3Y6sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageList\":\"_1z04G\"};","import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Img from \"gatsby-image\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport { useImages } from \"../../hooks/use-images\";\r\n\r\nconst { getImageNameOrDefaultCover } = require(\"../../utils/image-helpers\");\r\n\r\nconst CreaturePage = props => {\r\n  const imagePath = props.image;\r\n\r\n  const imageName = getImageNameOrDefaultCover(imagePath);\r\n  const images = useImages();\r\n  const image = images.find(img => img.originalName === imageName);\r\n\r\n  return (\r\n    <LocalizedLink className={styles.CreaturePageLink} to={props.slug}>\r\n      <section className={styles.CreaturePreviewContainer}>\r\n        <Img\r\n          className={styles.CreaturePageImage}\r\n          fluid={image}\r\n          alt={props.title}\r\n        />\r\n        <div className={styles.CreatureInfo}>\r\n          <h1 className={styles.PageTitle}>{props.title}</h1>\r\n          <p className={styles.PageDescription}>{props.description}</p>\r\n        </div>\r\n      </section>\r\n    </LocalizedLink>\r\n  );\r\n};\r\n\r\nCreaturePage.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CreaturePage;\r\n","import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CreaturePage from \"../CreaturePage\";\r\nimport { LocaleContext } from \"../Layout\";\r\n\r\nconst PageList = props => {\r\n  const { getCreaturesPath } = require(\"../../utils/url-helpers\");\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  return (\r\n    <section className={styles.PageList}>\r\n      {props.pages.map(\r\n        ({\r\n          node: {\r\n            frontmatter: { date, description, title, image },\r\n            fields: { slug },\r\n          },\r\n        }) => (\r\n          <CreaturePage\r\n            key={slug}\r\n            slug={`${getCreaturesPath(language.code)}/${slug}`}\r\n            date={date}\r\n            title={title}\r\n            description={description}\r\n            image={image}\r\n          />\r\n        ),\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nPageList.propTypes = {\r\n  pages: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PageList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationContainer\":\"_2MB3H\"};","import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\n\r\nconst Pagination = props => {\r\n  const translations = useTranslations();\r\n\r\n  const current = props.currentPage + 1;\r\n  const isFirst = current === 1;\r\n  const isLast = current === props.numPages;\r\n\r\n  return (\r\n    <div className={styles.PaginationContainer}>\r\n      <p>\r\n        {!isFirst && (\r\n          <LocalizedLink to={props.prevPage}>\r\n            ← {translations.Prev}\r\n          </LocalizedLink>\r\n        )}\r\n      </p>\r\n      <p>\r\n        {current} {translations.of} {props.numPages}\r\n      </p>\r\n      <p>\r\n        {!isLast && (\r\n          <LocalizedLink to={props.nextPage}>\r\n            {translations.Next} →\r\n          </LocalizedLink>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  numPages: PropTypes.number.isRequired,\r\n  prevPage: PropTypes.string,\r\n  nextPage: PropTypes.string,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport TitlePage from \"../components/TitlePage\";\r\nimport PageList from \"../components/PageList\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport SEO from \"../components/seo\";\r\nimport useTranslations from \"../i18n/translations/useTranslations\";\r\nimport { LocaleContext } from \"../components/Layout\";\r\n\r\nconst Creatures = props => {\r\n  const { getCreaturesUrl } = require(\"../utils/url-helpers\");\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  // Logic for Pagination Component\r\n  const { currentPage, numPages } = props.pageContext;\r\n  const prevPage = getCreaturesUrl(currentPage - 1, language.code);\r\n  const nextPage = getCreaturesUrl(currentPage + 1, language.code);\r\n  const pages = props.data.allMarkdownRemark.edges;\r\n  const translations = useTranslations();\r\n\r\n  return (\r\n    <>\r\n      <SEO title={translations.CreaturesPageTitle} />\r\n      <TitlePage text={translations.CreaturesPageTitle} />\r\n      <PageList pages={pages} />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nCreatures.propTypes = {\r\n  pageContext: PropTypes.object.isRequired,\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Creatures;\r\n\r\nexport const query = graphql`\r\n  query Creatures(\r\n    $locale: String!\r\n    $dateFormat: String!\r\n    $skip: Int!\r\n    $limit: Int!\r\n    $origin: String = \"*\"\r\n    $taxonomy: String = \"*\"\r\n    $shapeshifting: String = \"*\"\r\n    $activityTime: String = \"*\"\r\n    $voice: String = \"*\"\r\n    $character: String = \"*\"\r\n    $appearance: String = \"*\"\r\n    $clothes: String = \"*\"\r\n    $paraphernalia: String = \"*\"\r\n    $number: String = \"*\"\r\n    $habitat: String = \"*\"\r\n  ) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: {\r\n          page: { eq: null }\r\n          origin: { elemMatch: { value: { glob: $origin } } }\r\n          taxonomy: { elemMatch: { value: { glob: $taxonomy } } }\r\n          shapeshifting: { elemMatch: { value: { glob: $shapeshifting } } }\r\n          activityTime: { elemMatch: { value: { glob: $activityTime } } }\r\n          voice: { elemMatch: { value: { glob: $voice } } }\r\n          character: { elemMatch: { value: { glob: $character } } }\r\n          appearance: { elemMatch: { value: { glob: $appearance } } }\r\n          clothes: { elemMatch: { value: { glob: $clothes } } }\r\n          paraphernalia: { elemMatch: { value: { glob: $paraphernalia } } }\r\n          number: { elemMatch: { value: { glob: $number } } }\r\n          habitat: { elemMatch: { value: { glob: $habitat } } }\r\n        }\r\n      }\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            image\r\n            date(formatString: $dateFormat)\r\n          }\r\n          fields {\r\n            locale\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreaturePageLink\":\"_4UJxX\",\"CreaturePreviewContainer\":\"_Og4W\",\"CreaturePageImage\":\"_2SIll\",\"CreatureInfo\":\"_3RHxM\",\"PageTitle\":\"_27xHn\",\"PageDescription\":\"oxNQ9\"};"],"sourceRoot":""}