{"version":3,"file":"component---src-templates-creature-js-9c096fd13aa46963b82a.js","mappings":"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","sources":["webpack://catskald-legendary-creatures/./src/hooks/use-images.js","webpack://catskald-legendary-creatures/./src/components/CreatureCard/index.module.scss","webpack://catskald-legendary-creatures/./node_modules/@styled-icons/boxicons-logos/Wikipedia/Wikipedia.esm.js","webpack://catskald-legendary-creatures/./node_modules/@styled-icons/bootstrap/InfoCircleFill/InfoCircleFill.esm.js","webpack://catskald-legendary-creatures/./node_modules/@styled-icons/simple-icons/Imdb/Imdb.esm.js","webpack://catskald-legendary-creatures/./src/components/CreatureCard/index.js","webpack://catskald-legendary-creatures/./src/templates/creature.js","webpack://catskald-legendary-creatures/./src/utils/image-helpers.js"],"sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nexport const useImages = () => {\r\n  const { listImages } = useStaticQuery(\r\n    graphql`\r\n      {\r\n        listImages: allFile(\r\n          filter: { sourceInstanceName: { eq: \"image-assets\" } }\r\n        ) {\r\n          edges {\r\n            node {\r\n              childImageSharp {\r\n                image: gatsbyImageData(layout: CONSTRAINED)\r\n                metadata: parent {\r\n                  ... on File {\r\n                    relativePath\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n  return listImages.edges.map((edge) => ({\r\n    name: edge.node.childImageSharp.metadata.relativePath,\r\n    image: edge.node.childImageSharp.image,\r\n  }));\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var card = \"index-module--card--ib-L9\";\nexport var card__buttons = \"index-module--card__buttons--MmNrt\";\nexport var card__container = \"index-module--card__container--TxxIV\";\nexport var card__content = \"index-module--card__content--cEAnE\";\nexport var card__header = \"index-module--card__header--R7HLE\";\nexport var card__hint = \"index-module--card__hint--pjy6C\";\nexport var card__image = \"index-module--card__image---I1xm\";\nexport var card__image__container = \"index-module--card__image__container--iKK-f\";\nexport var card__image__copyright = \"index-module--card__image__copyright--VNhzG\";\nexport var card__image__copyright__info = \"index-module--card__image__copyright__info---2ypR\";\nexport var card__row = \"index-module--card__row--6mOCb\";\nexport var card__row__item = \"index-module--card__row__item--VaBU5\";\nexport var card__title = \"index-module--card__title--CKykD\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Wikipedia = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.081 12.932c-.78 1.611-1.849 3.792-2.379 4.776-.513.896-.94.776-1.278.024-1.172-2.77-3.58-7.625-4.712-10.347-.209-.502-.367-.823-.516-.95-.151-.125-.462-.2-.936-.227-.174-.019-.26-.061-.26-.131v-.379l.043-.038c.771-.004 4.503 0 4.503 0l.042.038v.362c0 .1-.063.147-.188.147l-.47.024c-.403.026-.605.137-.605.365 0 .112.044.275.139.501.902 2.206 4.017 8.772 4.017 8.772l.114.039 2.01-4.012-.402-.89L9.82 8.285s-.265-.545-.357-.727c-.607-1.203-.593-1.265-1.206-1.347-.173-.02-.261-.042-.261-.125v-.39l.05-.037h3.578l.095.03v.376c0 .088-.063.125-.189.125l-.257.039c-.66.051-.551.318-.113 1.186l1.319 2.712 1.465-2.922c.244-.533.194-.668.093-.789-.058-.07-.255-.185-.677-.2l-.168-.018a.191.191 0 0 1-.121-.043.125.125 0 0 1-.056-.107v-.357l.051-.037c1.04-.007 3.371 0 3.371 0l.05.037v.364c0 .101-.05.148-.161.148-.539.024-.652.079-.854.366-.1.154-.313.49-.538.865l-1.919 3.563-.054.112 2.328 4.763.142.041 3.665-8.704c.129-.352.107-.602-.053-.746-.165-.144-.289-.228-.716-.246l-.35-.014a.211.211 0 0 1-.127-.037.128.128 0 0 1-.06-.1v-.361l.049-.038h4.137l.034.038v.364c0 .1-.062.15-.174.15-.541.024-.94.15-1.203.351-.263.213-.465.514-.614.89 0 0-3.371 7.72-4.524 10.289-.438.84-.878.765-1.253-.026-.477-.977-1.478-3.156-2.206-4.761l.045-.03z\"\n  }));\n});\nWikipedia.displayName = 'Wikipedia';\nexport var WikipediaDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var InfoCircleFill = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 16 16\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"\n  }));\n});\nInfoCircleFill.displayName = 'InfoCircleFill';\nexport var InfoCircleFillDimensions = {\n  height: 16,\n  width: 16\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Imdb = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.378 0H1.622a1.721 1.721 0 0 0-1.62 1.595L0 22.378c.058.876.712 1.543 1.556 1.62a.337.337 0 0 0 .045.002h20.797a.458.458 0 0 0 .043-.002A1.723 1.723 0 0 0 24 22.29V1.71A1.72 1.72 0 0 0 22.415.002.33.33 0 0 0 22.378 0zm0 .496a1.214 1.214 0 0 1 1.125 1.214v20.58c0 .637-.487 1.16-1.104 1.214H1.602a1.214 1.214 0 0 1-1.106-1.126V1.628c.041-.61.522-1.092 1.126-1.132h20.756zM4.795 8.26v7.364H2.89V8.26h1.905zm6.537 0v7.364H9.671v-4.97L9 15.623H7.813l-.699-4.862-.006 4.862H5.44V8.26h2.468c.075.448.149.97.23 1.574l.272 1.871.44-3.445h2.482zm2.977 1.33c.075.04.122.107.142.203.028.095.035.311.035.644v2.855c0 .488-.035.786-.096.895-.06.115-.23.17-.502.17V9.52c.204 0 .346.02.421.068zm-.02 6.034c.454 0 .8-.027 1.024-.074.23-.048.42-.136.57-.265a.961.961 0 0 0 .324-.522c.061-.224.102-.665.102-1.322v-2.584c0-.698-.027-1.166-.074-1.403a1.277 1.277 0 0 0-.313-.644c-.169-.197-.42-.333-.745-.421-.32-.081-.854-.129-1.77-.129h-1.424v7.364h2.305zm5.14-1.783c0 .353-.02.576-.055.671-.033.095-.19.142-.305.142-.108 0-.19-.047-.224-.135-.04-.088-.06-.298-.06-.623v-1.947c0-.333.02-.543.054-.624.034-.08.108-.122.217-.122.115 0 .27.041.311.142.041.095.061.299.061.604v1.892zm-2.475-5.58v7.363h1.715l.115-.468c.156.19.326.333.516.428.182.088.46.135.678.135.304 0 .563-.075.78-.237a1.05 1.05 0 0 0 .42-.563c.054-.217.088-.543.088-.984v-2.067a7.2 7.2 0 0 0-.034-.868 1.025 1.025 0 0 0-.17-.42 1.013 1.013 0 0 0-.427-.333 1.929 1.929 0 0 0-1.342.013 1.629 1.629 0 0 0-.509.4v-2.4h-1.83z\"\n  }));\n});\nImdb.displayName = 'Imdb';\nexport var ImdbDimensions = {\n  height: 24,\n  width: 24\n};","import {\r\n  card__container,\r\n  card,\r\n  card__image,\r\n  card__title,\r\n  card__content,\r\n  card__header,\r\n  card__row,\r\n  card__row__item,\r\n  card__buttons,\r\n  card__hint,\r\n  card__image__container,\r\n  card__image__copyright,\r\n  card__image__copyright__info,\r\n} from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport { Wikipedia } from \"@styled-icons/boxicons-logos/Wikipedia\";\r\nimport { InfoCircleFill } from \"@styled-icons/bootstrap/InfoCircleFill\";\r\nimport { Imdb } from \"@styled-icons/simple-icons/Imdb\";\r\n\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\nimport { useImages } from \"../../hooks/use-images\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport { LocaleContext } from \"../Layout\";\r\nimport { noTag } from \"../../configuration\";\r\nimport { supportedTags } from \"../../i18n/navigation\";\r\nimport { localizedSort } from \"../../utils/array-helpers\";\r\nimport { getImageNameOrDefaultCover } from \"../../utils/image-helpers\";\r\nimport { getCreatureUrl, getNameFromPath } from \"../../utils/url-helpers\";\r\nimport { getTagUrl, getTagValueUrl } from \"../../utils/url-helpers\";\r\n\r\nconst CreatureCard = (props) => {\r\n  const translations = useTranslations();\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  const imageName = getImageNameOrDefaultCover(props.frontmatter.image);\r\n  const images = useImages();\r\n  const image = images.find((img) => img.name === imageName);\r\n\r\n  //TODO move this inside image?\r\n  const imageCopyrights = props.frontmatter.external_references\r\n    ? props.frontmatter.external_references\r\n        .filter((x) => x.type === \"Image attribution\")\r\n        .map((x) => x.reference_html)\r\n    : [];\r\n\r\n  return (\r\n    <div className={card__container}>\r\n      <div className={card}>\r\n        <div className={card__image__container}>\r\n          <GatsbyImage\r\n            className={card__image}\r\n            image={image.image}\r\n            alt={props.frontmatter.title}\r\n          />\r\n          {imageCopyrights && (\r\n            <>\r\n              <InfoCircleFill className={card__image__copyright__info} />\r\n              <div\r\n                className={card__image__copyright}\r\n                dangerouslySetInnerHTML={{ __html: imageCopyrights[0] }}\r\n              ></div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <table className={card__content}>\r\n          <caption className={card__title}>\r\n            <span>{props.frontmatter.title}</span>\r\n          </caption>\r\n          <tbody>\r\n            {localizedSort(\r\n              supportedTags.map((tag) => ({\r\n                tag: translations[tag],\r\n                values: props.frontmatter[tag],\r\n              })),\r\n              language.code,\r\n              (x) => x.tag,\r\n            ).map(({ tag, values }) => (\r\n              <CardRow\r\n                tag={tag}\r\n                data={values}\r\n                language={language}\r\n                sometimesText={translations[\"sometimes\"]}\r\n                key={tag}\r\n              />\r\n            ))}\r\n            <RelatedCreatures\r\n              data={props.frontmatter}\r\n              label={translations.related}\r\n              language={language}\r\n            />\r\n          </tbody>\r\n        </table>\r\n        <CardButtons data={props.frontmatter} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardRow = (props) => {\r\n  if (!props.data) return null;\r\n\r\n  let data = Array.isArray(props.data) ? props.data : [props.data];\r\n  data = data.filter((x) => x && x.value !== noTag);\r\n  if (data.length === 0) return null;\r\n\r\n  data = localizedSort(data, props.language.code, (x) => x.value);\r\n  const tagUrl = getTagUrl(props.tag, props.language.code);\r\n\r\n  return (\r\n    <tr>\r\n      <th className={card__header}>\r\n        <LocalizedLink to={tagUrl}>{props.tag}</LocalizedLink>\r\n      </th>\r\n      <td className={card__row}>\r\n        {data.map((category, index) => {\r\n          const tagValueUrl = getTagValueUrl(\r\n            props.tag,\r\n            category.value,\r\n            props.language.code,\r\n          );\r\n\r\n          let comment = \"\";\r\n          if (category.comment && category.sometimes)\r\n            comment = `${props.sometimesText}, ${category.comment}`;\r\n          else if (category.comment) comment = category.comment;\r\n          else if (category.sometimes) comment = props.sometimesText;\r\n\r\n          return (\r\n            <span key={props.tag + index} className={card__row__item}>\r\n              <LocalizedLink to={tagValueUrl}>{category.value}</LocalizedLink>\r\n              <span className={card__hint}>\r\n                {comment ? ` (${comment})` : \"\"}\r\n              </span>\r\n            </span>\r\n          );\r\n        })}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst RelatedCreatures = (props) => {\r\n  if (!props.data.related || props.data.related.length === 0) return <></>;\r\n\r\n  let creatureLinks = props.data.related.map((path) => {\r\n    var name = getNameFromPath(path).name;\r\n    return {\r\n      name: name, //TODO capitalization\r\n      link: getCreatureUrl(name, props.language.code),\r\n    };\r\n  });\r\n  creatureLinks = localizedSort(\r\n    creatureLinks,\r\n    props.language.code,\r\n    (x) => x.name,\r\n  );\r\n\r\n  return (\r\n    <tr>\r\n      <th className={card__header}>{props.label}</th>\r\n      <td className={card__row}>\r\n        {creatureLinks.map(({ name, link }) => (\r\n          <span className={card__row__item} key={name}>\r\n            <LocalizedLink to={link}>{name}</LocalizedLink>\r\n          </span>\r\n        ))}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst CardButtons = (props) => {\r\n  const findButton = (type) => {\r\n    const result =\r\n      props.data.external_references &&\r\n      props.data.external_references.find(\r\n        (x) => x.type === type && x.reference_url,\r\n      );\r\n\r\n    if (result)\r\n      return {\r\n        type: type,\r\n        href: result.reference_url,\r\n        description: result.description || \"\",\r\n      };\r\n    else return null;\r\n  };\r\n\r\n  //TODO add other types\r\n  const wikipedia = findButton(\"Wikipedia\");\r\n  const imdb = findButton(\"IMDB\");\r\n\r\n  if (!wikipedia && !imdb) return <></>;\r\n\r\n  return (\r\n    <div className={card__buttons}>\r\n      {wikipedia && (\r\n        <a\r\n          href={wikipedia.href}\r\n          title={wikipedia.type}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Wikipedia />\r\n        </a>\r\n      )}\r\n      {imdb && (\r\n        <a\r\n          href={imdb.href}\r\n          title={imdb.type + (imdb.description ? `: ${description}` : \"\")}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Imdb />\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCreatureCard.propTypes = {\r\n  frontmatter: PropTypes.object.isRequired,\r\n};\r\n\r\nconst languageShape = {\r\n  code: PropTypes.string.isRequired,\r\n};\r\nconst categoryShape = {\r\n  value: PropTypes.string.isRequired,\r\n  comment: PropTypes.string,\r\n  sometimes: PropTypes.bool,\r\n};\r\nCardRow.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.shape(categoryShape),\r\n    PropTypes.arrayOf(PropTypes.shape(categoryShape)),\r\n  ]),\r\n  language: PropTypes.shape(languageShape).isRequired,\r\n  sometimesText: PropTypes.string.isRequired,\r\n};\r\n\r\nCardButtons.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nRelatedCreatures.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  language: PropTypes.shape(languageShape).isRequired,\r\n  data: PropTypes.shape({\r\n    related: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  }).isRequired,\r\n};\r\n\r\nexport default CreatureCard;\r\n","import \"../styles/markdown.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport CreatureCard from \"../components/CreatureCard\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst Creature = (props) => {\r\n  const content = props.data.markdownRemark;\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={content.frontmatter.title}\r\n        description={content.frontmatter.description}\r\n        image={content.frontmatter.image}\r\n      />\r\n      <section className=\"markdown\">\r\n        <CreatureCard frontmatter={content.frontmatter} />\r\n        <div dangerouslySetInnerHTML={{ __html: content.html }}></div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nCreature.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Creature;\r\n\r\nexport const query = graphql`\r\n  query Creature($locale: String!, $id: String!) {\r\n    markdownRemark(\r\n      frontmatter: { id: { eq: $id } }\r\n      fields: { locale: { eq: $locale } }\r\n    ) {\r\n      frontmatter {\r\n        title\r\n        names {\r\n          name\r\n          plural\r\n          language\r\n        }\r\n        description\r\n        related\r\n        origin {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        taxonomy {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        shapeshifting {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        activityTime {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        voice {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        character {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        appearance {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        clothes {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        paraphernalia {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        number {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        habitat {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        image\r\n        external_references {\r\n          type\r\n          description\r\n          reference_url\r\n          reference_html\r\n        }\r\n      }\r\n      html\r\n    }\r\n  }\r\n`;\r\n","exports.getImageNameOrDefaultCover = (imagePath) =>\r\n  imagePath ? imagePath.split(\"\\\\\").pop().split(\"/\").pop() : \"cover.jpg\";\r\n"],"names":["useImages","useStaticQuery","listImages","edges","map","edge","name","node","childImageSharp","metadata","relativePath","image","card__header","card__row","card__row__item","Wikipedia","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","d","displayName","InfoCircleFill","Imdb","CardRow","data","Array","isArray","filter","x","value","noTag","length","localizedSort","language","code","tagUrl","getTagUrl","tag","className","LocalizedLink","to","category","index","tagValueUrl","getTagValueUrl","comment","sometimes","sometimesText","key","RelatedCreatures","related","creatureLinks","path","getNameFromPath","link","getCreatureUrl","label","CardButtons","findButton","type","result","external_references","find","reference_url","href","description","wikipedia","imdb","title","target","rel","translations","useTranslations","React","LocaleContext","imageName","getImageNameOrDefaultCover","frontmatter","img","imageCopyrights","reference_html","G","alt","dangerouslySetInnerHTML","__html","supportedTags","values","content","markdownRemark","html","exports","imagePath","split","pop"],"sourceRoot":""}