{"version":3,"sources":["webpack:///./node_modules/path-browserify/index.js","webpack:///./src/components/TitlePage/index.js","webpack:///./src/components/TitlePage/index.module.scss","webpack:///./src/utils/tags-helpers.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/components/TagList/index.js","webpack:///./src/templates/tags.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./src/utils/url-helpers.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/utils/array-helpers.js","webpack:///./src/components/TagList/index.module.scss"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","filter","xs","f","res","push","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","TitlePage","props","className","styles","TitleElement","text","module","localizedNavigation","require","noTag","parseTags","edges","tags","forEach","frontmatter","node","tag","tagValues","isArray","map","v","value","existingTags","Set","iter","Symbol","iterator","Object","arrayLikeToArray","TagList","getTagUrl","getTagValueUrl","localizedSort","translations","useTranslations","language","React","useContext","LocaleContext","entries","values","x","key","TagListItem","LocalizedLink","Tag","TagValue","query","Tags","data","allMarkdownRemark","title","TagsPageTitle","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","pagePath","pageIndex","getTagsPath","languageCode","pages","getCreaturesPath","creatures","getSearchPath","search","removeSpecialCharacters","s","replace","localizedSlug","isDefault","locale","slug","isPage","creaturesPath","toLowerCase","getCreatureUrl","creatureName","getCreaturesUrl","getNameFromPath","nameWithLanguage","name","arr2","o","minLen","n","toString","constructor","test","array","valueSelector","temp","sort","a","b","localeCompare"],"mappings":"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","file":"component---src-templates-tags-js-1b87ba19674809d05edf.js","sourcesContent":["// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TitlePage = props => {\r\n  return <h1 className={styles.TitleElement}>{props.text}</h1>;\r\n};\r\n\r\nTitlePage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TitlePage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleElement\":\"_3Y6sz\"};","const localizedNavigation = require(\"../i18n/navigation\");\r\nconst { noTag } = require(\"../configuration\");\r\n\r\nexports.parseTags = edges => {\r\n  let tags = {};\r\n\r\n  edges.forEach(({ node: { frontmatter } }) => {\r\n    for (const tag in frontmatter) {\r\n      if (!localizedNavigation.tags[tag]) continue;\r\n\r\n      let tagValues = frontmatter[tag];\r\n      if (!tagValues) continue;\r\n\r\n      tagValues = Array.isArray(tagValues)\r\n        ? tagValues.map(v => v.value)\r\n        : [tagValues.value];\r\n      tagValues = tagValues.filter(value => value !== noTag);\r\n      if (tagValues.length === 0) continue;\r\n\r\n      const existingTags = tags[tag];\r\n      if (existingTags) {\r\n        tags[tag] = [...new Set(existingTags.concat(tagValues))];\r\n      } else {\r\n        tags[tag] = tagValues;\r\n      }\r\n    }\r\n  });\r\n\r\n  return tags;\r\n};\r\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport { LocaleContext } from \"../Layout\";\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\n\r\nconst TagList = props => {\r\n  const { getTagUrl, getTagValueUrl } = require(\"../../utils/url-helpers\");\r\n  const { localizedSort } = require(\"../../utils/array-helpers\");\r\n  const translations = useTranslations();\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  const getSortedTags = tags =>\r\n    localizedSort(\r\n      Object.entries(tags).map(([tag, values]) => ({\r\n        tag: translations[tag],\r\n        values: localizedSort(values, language.code),\r\n      })),\r\n      language.code,\r\n      x => x.tag,\r\n    );\r\n\r\n  return (\r\n    <section className={styles.TagList}>\r\n      {getSortedTags(props.tags).map(({ tag, values }) => {\r\n        return (\r\n          <div key={tag} className={styles.TagListItem}>\r\n            <LocalizedLink\r\n              className={styles.Tag}\r\n              to={getTagUrl(tag, language.code)}\r\n            >\r\n              {tag}\r\n            </LocalizedLink>\r\n            <br />\r\n            {values.map((value, index) => (\r\n              <LocalizedLink\r\n                className={styles.TagValue}\r\n                key={`${tag}_${value}${index}`}\r\n                to={getTagValueUrl(tag, value, language.code)}\r\n              >\r\n                {value}\r\n              </LocalizedLink>\r\n            ))}\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nTagList.propTypes = {\r\n  tags: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TagList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport TitlePage from \"../components/TitlePage\";\r\nimport TagList from \"../components/TagList\";\r\nimport SEO from \"../components/seo\";\r\nimport useTranslations from \"../i18n/translations/useTranslations\";\r\n\r\nconst Tags = props => {\r\n  const translations = useTranslations();\r\n  const { parseTags } = require(\"../utils/tags-helpers\");\r\n  const tags = parseTags(props.data.allMarkdownRemark.edges);\r\n\r\n  return (\r\n    <>\r\n      <SEO title={translations.TagsPageTitle} />\r\n      <TitlePage text={translations.TagsPageTitle} />\r\n      <TagList tags={tags} />\r\n    </>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const query = graphql`\r\n  query Tags($locale: String!) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: { page: { eq: null } }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            origin {\r\n              value\r\n            }\r\n            taxonomy {\r\n              value\r\n            }\r\n            shapeshifting {\r\n              value\r\n            }\r\n            activityTime {\r\n              value\r\n            }\r\n            voice {\r\n              value\r\n            }\r\n            appearance {\r\n              value\r\n            }\r\n            character {\r\n              value\r\n            }\r\n            clothes {\r\n              value\r\n            }\r\n            paraphernalia {\r\n              value\r\n            }\r\n            number {\r\n              value\r\n            }\r\n            habitat {\r\n              value\r\n            }\r\n            wikipedia\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const localizedNavigation = require(\"../i18n/navigation\");\r\nconst path = require(\"path\");\r\n\r\nconst pagePath = pageIndex => (pageIndex >= 1 ? `/${pageIndex}` : \"\");\r\n\r\nconst getTagsPath = languageCode =>\r\n  localizedNavigation.pages.tags[languageCode].path;\r\nconst getCreaturesPath = languageCode =>\r\n  localizedNavigation.pages.creatures[languageCode].path;\r\nconst getSearchPath = languageCode =>\r\n  localizedNavigation.pages.search[languageCode].path;\r\n\r\nconst removeSpecialCharacters = s => s.replace(/\\s/g, \"\");\r\n\r\nexports.getTagsPath = getTagsPath;\r\nexports.getCreaturesPath = getCreaturesPath;\r\nexports.getSearchPath = getSearchPath;\r\n\r\nexports.localizedSlug = ({ isDefault, locale, slug, isPage }) => {\r\n  if (isPage) {\r\n    return isDefault ? `/${slug}` : `/${locale}/${slug}`;\r\n  }\r\n\r\n  const creaturesPath = getCreaturesPath(locale);\r\n\r\n  return isDefault\r\n    ? `${creaturesPath}/${slug}`\r\n    : `/${locale + creaturesPath}/${slug}`;\r\n};\r\n\r\nexports.getTagUrl = (tag, languageCode) =>\r\n  `${getTagsPath(languageCode)}#${removeSpecialCharacters(tag)}`;\r\n\r\nexports.getTagValueUrl = (tag, value, languageCode, pageIndex) => {\r\n  if (!tag || !value) return null;\r\n  const url = `${getSearchPath(languageCode)}/${removeSpecialCharacters(\r\n    tag,\r\n  ).toLowerCase()}/${removeSpecialCharacters(value).toLowerCase()}`;\r\n  return url + pagePath(pageIndex);\r\n};\r\n\r\nexports.getCreatureUrl = (creatureName, languageCode) => {\r\n  return `${getCreaturesPath(languageCode)}/${removeSpecialCharacters(\r\n    creatureName,\r\n  )}`;\r\n};\r\n\r\nexports.getCreaturesUrl = (pageIndex, languageCode) => {\r\n  return getCreaturesPath(languageCode) + pagePath(pageIndex);\r\n};\r\n\r\nexports.getNameFromPath = value => {\r\n  const nameWithLanguage = path.basename(value, \".md\");\r\n  const name = nameWithLanguage.slice(0, -3); //\".en\".length = 3\r\n  const language = nameWithLanguage.slice(-2); //\"en\".length = 2\r\n\r\n  return {\r\n    name,\r\n    language,\r\n  };\r\n};\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","exports.localizedSort = (array, languageCode, valueSelector) => {\r\n  if (!valueSelector) valueSelector = x => x;\r\n  const temp = [...array];\r\n  temp.sort((a, b) =>\r\n    valueSelector(a).localeCompare(valueSelector(b), languageCode),\r\n  );\r\n  return temp;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagList\":\"_3047y\",\"TagListItem\":\"A-eQm\",\"Tag\":\"_3TYbL\",\"TagValue\":\"UVEO0\"};"],"sourceRoot":""}