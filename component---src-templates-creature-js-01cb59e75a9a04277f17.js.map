{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/components/CreatureCard/index.module.scss","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@styled-icons/boxicons-logos/Wikipedia/Wikipedia.esm.js","webpack:///./src/components/CreatureCard/index.js","webpack:///./src/templates/creature.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/utils/array-helpers.js"],"names":["module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","Wikipedia","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","d","displayName","CardRow","data","filter","x","value","noTag","length","localizedSort","language","code","tagUrl","getTagUrl","tag","className","styles","InfoHeader","LocalizedLink","to","InfoRow","map","category","index","tagValueUrl","getTagValueUrl","comment","sometimes","sometimesText","key","InfoRowEntry","Hint","RelatedCreatures","related","creatureLinks","path","name","getNameFromPath","link","getCreatureUrl","label","CardButtons","wikipedia","InfoButtons","href","title","target","rel","CreatureCard","translations","useTranslations","React","useContext","LocaleContext","imageName","getImageNameOrDefaultCover","frontmatter","image","useImages","find","img","originalName","Container","Card","CardImage","fluid","alt","Info","Title","supportedTags","values","Creature","content","markdownRemark","description","dangerouslySetInnerHTML","__html","html","len","i","arr2","o","minLen","n","prototype","toString","call","slice","constructor","test","array","languageCode","valueSelector","temp","sort","a","b","localeCompare"],"mappings":"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","file":"component---src-templates-creature-js-01cb59e75a9a04277f17.js","sourcesContent":["function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"_2LmGf\",\"InfoHeader\":\"_18QO6\",\"InfoRow\":\"_3eigS\",\"InfoButtons\":\"_2WSOY\",\"Info\":\"_2YneF\",\"InfoRowEntry\":\"_1ewU3\",\"Hint\":\"_2O6ez\",\"CardImage\":\"_1fimo\",\"Container\":\"MrpTx\",\"Card\":\"_1P2MF\"};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Wikipedia = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.081 12.932c-.78 1.611-1.849 3.792-2.379 4.776-.513.896-.94.776-1.278.024-1.172-2.77-3.58-7.625-4.712-10.347-.209-.502-.367-.823-.516-.95-.151-.125-.462-.2-.936-.227-.174-.019-.26-.061-.26-.131v-.379l.043-.038c.771-.004 4.503 0 4.503 0l.042.038v.362c0 .1-.063.147-.188.147l-.47.024c-.403.026-.605.137-.605.365 0 .112.044.275.139.501.902 2.206 4.017 8.772 4.017 8.772l.114.039 2.01-4.012-.402-.89L9.82 8.285s-.265-.545-.357-.727c-.607-1.203-.593-1.265-1.206-1.347-.173-.02-.261-.042-.261-.125v-.39l.05-.037h3.578l.095.03v.376c0 .088-.063.125-.189.125l-.257.039c-.66.051-.551.318-.113 1.186l1.319 2.712 1.465-2.922c.244-.533.194-.668.093-.789-.058-.07-.255-.185-.677-.2l-.168-.018a.191.191 0 01-.121-.043.125.125 0 01-.056-.107v-.357l.051-.037c1.04-.007 3.371 0 3.371 0l.05.037v.364c0 .101-.05.148-.161.148-.539.024-.652.079-.854.366-.1.154-.313.49-.538.865l-1.919 3.563-.054.112 2.328 4.763.142.041 3.665-8.704c.129-.352.107-.602-.053-.746-.165-.144-.289-.228-.716-.246l-.35-.014a.211.211 0 01-.127-.037.128.128 0 01-.06-.1v-.361l.049-.038h4.137l.034.038v.364c0 .1-.062.15-.174.15-.541.024-.94.15-1.203.351-.263.213-.465.514-.614.89 0 0-3.371 7.72-4.524 10.289-.438.84-.878.765-1.253-.026-.477-.977-1.478-3.156-2.206-4.761l.045-.03z\"\n  }));\n});\nWikipedia.displayName = 'Wikipedia';\nexport var WikipediaDimensions = {\n  height: 24,\n  width: 24\n};","import styles from \"./index.module.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Img from \"gatsby-image\";\r\nimport { Wikipedia } from \"@styled-icons/boxicons-logos/Wikipedia\";\r\n\r\nimport useTranslations from \"../../i18n/translations/useTranslations\";\r\nimport { useImages } from \"../../hooks/use-images\";\r\nimport LocalizedLink from \"../LocalizedLink\";\r\nimport { LocaleContext } from \"../Layout\";\r\nimport { noTag } from \"../../configuration\";\r\nimport { supportedTags } from \"../../i18n/navigation\";\r\nimport { localizedSort } from \"../../utils/array-helpers\";\r\nimport { getImageNameOrDefaultCover } from \"../../utils/image-helpers\";\r\nimport { getCreatureUrl, getNameFromPath } from \"../../utils/url-helpers\";\r\nimport { getTagUrl, getTagValueUrl } from \"../../utils/url-helpers\";\r\n\r\nconst CreatureCard = props => {\r\n  const translations = useTranslations();\r\n  const { language } = React.useContext(LocaleContext);\r\n\r\n  const imageName = getImageNameOrDefaultCover(props.frontmatter.image);\r\n  const images = useImages();\r\n  const image = images.find(img => img.originalName === imageName);\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      <div className={styles.Card}>\r\n        <Img\r\n          className={styles.CardImage}\r\n          fluid={image.fluid}\r\n          alt={props.frontmatter.title}\r\n        />\r\n        <table className={styles.Info}>\r\n          <caption className={styles.Title}>\r\n            <span>{props.frontmatter.title}</span>\r\n          </caption>\r\n          <tbody>\r\n            {localizedSort(\r\n              supportedTags.map(tag => ({\r\n                tag: translations[tag],\r\n                values: props.frontmatter[tag],\r\n              })),\r\n              language.code,\r\n              x => x.tag,\r\n            ).map(({ tag, values }) => (\r\n              <CardRow\r\n                tag={tag}\r\n                data={values}\r\n                language={language}\r\n                sometimesText={translations[\"sometimes\"]}\r\n                key={tag}\r\n              />\r\n            ))}\r\n            <RelatedCreatures\r\n              data={props.frontmatter}\r\n              label={translations.related}\r\n              language={language}\r\n            />\r\n          </tbody>\r\n        </table>\r\n        <CardButtons data={props.frontmatter} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardRow = props => {\r\n  if (!props.data) return null;\r\n\r\n  let data = Array.isArray(props.data) ? props.data : [props.data];\r\n  data = data.filter(x => x && x.value !== noTag);\r\n  if (data.length === 0) return null;\r\n\r\n  data = localizedSort(data, props.language.code, x => x.value);\r\n  const tagUrl = getTagUrl(props.tag, props.language.code);\r\n\r\n  return (\r\n    <tr>\r\n      <th className={styles.InfoHeader}>\r\n        <LocalizedLink to={tagUrl}>{props.tag}</LocalizedLink>\r\n      </th>\r\n      <td className={styles.InfoRow}>\r\n        {data.map((category, index) => {\r\n          const tagValueUrl = getTagValueUrl(\r\n            props.tag,\r\n            category.value,\r\n            props.language.code,\r\n          );\r\n\r\n          let comment = \"\";\r\n          if (category.comment && category.sometimes)\r\n            comment = `${props.sometimesText}, ${category.comment}`;\r\n          else if (category.comment) comment = category.comment;\r\n          else if (category.sometimes) comment = props.sometimesText;\r\n\r\n          return (\r\n            <span key={props.tag + index} className={styles.InfoRowEntry}>\r\n              <LocalizedLink to={tagValueUrl}>{category.value}</LocalizedLink>\r\n              <span className={styles.Hint}>\r\n                {comment ? ` (${comment})` : \"\"}\r\n              </span>\r\n            </span>\r\n          );\r\n        })}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst RelatedCreatures = props => {\r\n  if (!props.data.related || props.data.related.length === 0) return <></>;\r\n\r\n  let creatureLinks = props.data.related.map(path => {\r\n    var name = getNameFromPath(path).name;\r\n    return {\r\n      name: name, //TODO capitalization\r\n      link: getCreatureUrl(name, props.language.code),\r\n    };\r\n  });\r\n  creatureLinks = localizedSort(\r\n    creatureLinks,\r\n    props.language.code,\r\n    x => x.name,\r\n  );\r\n\r\n  return (\r\n    <tr>\r\n      <th className={styles.InfoHeader}>{props.label}</th>\r\n      <td className={styles.InfoRow}>\r\n        {creatureLinks.map(({ name, link }) => (\r\n          <span className={styles.InfoRowEntry} key={name}>\r\n            <LocalizedLink to={link}>{name}</LocalizedLink>\r\n          </span>\r\n        ))}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst CardButtons = props => {\r\n  const anyButtons = props.data.wikipedia;\r\n  if (!anyButtons) return <></>;\r\n\r\n  return (\r\n    <div className={styles.InfoButtons}>\r\n      {props.data.wikipedia && (\r\n        <a\r\n          href={props.data.wikipedia}\r\n          title=\"Wikipedia\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Wikipedia />\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCreatureCard.propTypes = {\r\n  frontmatter: PropTypes.object.isRequired,\r\n};\r\n\r\nconst languageShape = {\r\n  code: PropTypes.string.isRequired,\r\n};\r\nconst categoryShape = {\r\n  value: PropTypes.string.isRequired,\r\n  comment: PropTypes.string,\r\n  sometimes: PropTypes.bool,\r\n};\r\nCardRow.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.shape(categoryShape),\r\n    PropTypes.arrayOf(PropTypes.shape(categoryShape)),\r\n  ]),\r\n  language: PropTypes.shape(languageShape).isRequired,\r\n  sometimesText: PropTypes.string.isRequired,\r\n};\r\n\r\nCardButtons.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nRelatedCreatures.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  language: PropTypes.shape(languageShape).isRequired,\r\n  data: PropTypes.shape({\r\n    related: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  }).isRequired,\r\n};\r\n\r\nexport default CreatureCard;\r\n","import \"../styles/markdown.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport CreatureCard from \"../components/CreatureCard\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst Creature = props => {\r\n  const content = props.data.markdownRemark;\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={content.frontmatter.title}\r\n        description={content.frontmatter.description}\r\n        image={content.frontmatter.image}\r\n      />\r\n      <section className=\"markdown\">\r\n        <CreatureCard frontmatter={content.frontmatter} />\r\n        <div dangerouslySetInnerHTML={{ __html: content.html }}></div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nCreature.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n          }),\r\n        }).isRequired,\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Creature;\r\n\r\nexport const query = graphql`\r\n  query Creature($locale: String!, $id: String!) {\r\n    markdownRemark(\r\n      frontmatter: { id: { eq: $id } }\r\n      fields: { locale: { eq: $locale } }\r\n    ) {\r\n      frontmatter {\r\n        title\r\n        names {\r\n          name\r\n          plural\r\n          language\r\n        }\r\n        description\r\n        related\r\n        origin {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        taxonomy {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        shapeshifting {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        activityTime {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        voice {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        character {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        appearance {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        clothes {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        paraphernalia {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        number {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        habitat {\r\n          value\r\n          comment\r\n          sometimes\r\n        }\r\n        wikipedia\r\n        image\r\n      }\r\n      html\r\n    }\r\n  }\r\n`;\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","exports.localizedSort = (array, languageCode, valueSelector) => {\r\n  if (!valueSelector) valueSelector = x => x;\r\n  const temp = [...array];\r\n  temp.sort((a, b) =>\r\n    valueSelector(a).localeCompare(valueSelector(b), languageCode),\r\n  );\r\n  return temp;\r\n};\r\n"],"sourceRoot":""}